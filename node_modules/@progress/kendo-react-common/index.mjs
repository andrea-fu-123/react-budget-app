/**
 * @license
 *-------------------------------------------------------------------------------------------
 * Copyright Â© 2024 Progress Software Corporation. All rights reserved.
 * Licensed under commercial license. See LICENSE.md in the package root for more information
 *-------------------------------------------------------------------------------------------
 */
"use client";
import * as e from "./tree-utils/itemIdUtils.mjs";
import { ZIndexContext as t, useZIndexContext as p } from "./contexts/ZIndexContext.mjs";
import { BrowserSupportService as s } from "./browser-support.service.mjs";
import { canUseDOM as a } from "./canUseDOM.mjs";
import { canUseRef as f } from "./canUseRef.mjs";
import { classNames as c } from "./classNames.mjs";
import { clone as d, cloneArray as u, cloneDate as I, cloneObject as C, cloneValue as E } from "./clone.mjs";
import { applyTrappedFocus as g, firstFocusableChild as A, focusFirstFocusableChild as b, focusLastFocusableChild as S, keepFocusInContainer as v, lastFocusableChild as D } from "./trappedFocus.mjs";
import { FormComponent as T } from "./FormComponent.mjs";
import { getTabIndex as L } from "./getTabIndex.mjs";
import { getter as B } from "./getter.mjs";
import { guid as P } from "./guid.mjs";
import { Keys as k } from "./keys.mjs";
import { noop as W } from "./noop.mjs";
import { getScrollbarWidth as w, setScrollbarWidth as R } from "./scrollbarWidth.mjs";
import { setter as Z } from "./setter.mjs";
import { FIELD_REGEX as z, FOCUSABLE_ELEMENTS as G, FOCUSABLE_ELEMENTS_BASE as H, TABBABLE_ELEMENTS as K } from "./constants/main.mjs";
import { extendDataItem as q, getItemPath as J, mapTree as Q, mapTreeItem as Y } from "./treeDataOperations.mjs";
import { shouldShowValidationUI as ee, validatePackage as oe } from "./validate-package.mjs";
import { hasRelativeStackingContext as te } from "./hasRelativeStackingContext.mjs";
import { WatermarkOverlay as me } from "./watermark/WatermarkOverlay.mjs";
import { dispatchEvent as xe } from "./events/dispatchEvent.mjs";
import { AsyncFocusBlur as ne } from "./hocs/AsyncFocusBlur.mjs";
import { createPropsContext as le, withPropsContext as ce } from "./hocs/withPropsContext.mjs";
import { withIdHOC as de } from "./hocs/use-id-hoc.mjs";
import { useDir as Ie } from "./hooks/useDir.mjs";
import { useAsyncFocusBlur as Ee } from "./hooks/useAsyncFocusBlur.mjs";
import { useRtl as ge } from "./hooks/useRtl.mjs";
import { useMouse as be } from "./hooks/useMouse.mjs";
import { useCustomComponent as ve } from "./hooks/useCustomComponent.mjs";
import { usePropsContext as Fe } from "./hooks/usePropsContext.mjs";
import { COLLECTION_ACTION as ye, useCollection as Le } from "./hooks/useCollection.mjs";
import { useDocument as Be } from "./hooks/useDocument.mjs";
import { useWindow as Pe } from "./hooks/useWindow.mjs";
import { useId as ke } from "./hooks/use-id.mjs";
import { useIsomorphicLayoutEffect as We } from "./hooks/use-isomorphic-layout-effect.mjs";
import { Icon as we } from "./icons/Icon.mjs";
import { SvgIcon as Ve } from "./icons/SvgIcon.mjs";
import { IconWrap as je } from "./icons/IconWrap.mjs";
import { IconsContext as Ge } from "./icons/IconsContext.mjs";
import { svgIconPropType as Ke, toIconClass as Xe, toIconName as qe } from "./icons/utils.mjs";
import { Typography as Qe } from "./typography/Typography.mjs";
import { DragAndDrop as $e } from "./drag-n-drop/index.mjs";
import { Draggable as oo } from "./Draggable.mjs";
import { Droppable as to } from "./Droppable.mjs";
import { useDraggable as mo } from "./hooks/useDraggable.mjs";
import { useDroppable as xo } from "./hooks/useDroppable.mjs";
import { kendoThemeMaps as no } from "./theme.mjs";
import { memoizeOne as lo } from "./memoize.mjs";
import { Navigation as io } from "./navigation.mjs";
import { getActiveElement as Io, getInnerActiveElement as Co } from "./getActiveElement.mjs";
import { TreeFieldsService as ho } from "./tree-utils/FieldsService.mjs";
import { SortedPublicItemIds as Ao } from "./tree-utils/SortedPublicItemIds.mjs";
import { addItem as So, areAllDirectChildrenChecked as vo, getAllDirectIndirectChildrenIds as Do, getAllParents as Fo, hasChildren as To, isEnabledAndAllParentsEnabled as yo, isItemExpandedAndWithChildren as Lo, removeItem as Oo, resolveItemId as Bo, resolveItemsIds as No, updateItem as Po } from "./tree-utils/itemUtils.mjs";
import { getNestedValue as ko, isArray as Mo } from "./tree-utils/misc.mjs";
export {
  ne as AsyncFocusBlur,
  s as BrowserSupportService,
  ye as COLLECTION_ACTION,
  $e as DragAndDrop,
  oo as Draggable,
  to as Droppable,
  z as FIELD_REGEX,
  G as FOCUSABLE_ELEMENTS,
  H as FOCUSABLE_ELEMENTS_BASE,
  T as FormComponent,
  we as Icon,
  je as IconWrap,
  Ge as IconsContext,
  k as Keys,
  io as Navigation,
  Ao as SortedPublicItemIds,
  Ve as SvgIcon,
  K as TABBABLE_ELEMENTS,
  ho as TreeFieldsService,
  Qe as Typography,
  me as WatermarkOverlay,
  t as ZIndexContext,
  So as addItem,
  g as applyTrappedFocus,
  vo as areAllDirectChildrenChecked,
  a as canUseDOM,
  f as canUseRef,
  c as classNames,
  d as clone,
  u as cloneArray,
  I as cloneDate,
  C as cloneObject,
  E as cloneValue,
  le as createPropsContext,
  xe as dispatchEvent,
  q as extendDataItem,
  A as firstFocusableChild,
  b as focusFirstFocusableChild,
  S as focusLastFocusableChild,
  Io as getActiveElement,
  Do as getAllDirectIndirectChildrenIds,
  Fo as getAllParents,
  Co as getInnerActiveElement,
  J as getItemPath,
  ko as getNestedValue,
  w as getScrollbarWidth,
  L as getTabIndex,
  B as getter,
  P as guid,
  To as hasChildren,
  te as hasRelativeStackingContext,
  Mo as isArray,
  yo as isEnabledAndAllParentsEnabled,
  Lo as isItemExpandedAndWithChildren,
  v as keepFocusInContainer,
  no as kendoThemeMaps,
  D as lastFocusableChild,
  Q as mapTree,
  Y as mapTreeItem,
  lo as memoizeOne,
  W as noop,
  Oo as removeItem,
  Bo as resolveItemId,
  No as resolveItemsIds,
  R as setScrollbarWidth,
  Z as setter,
  ee as shouldShowValidationUI,
  Ke as svgIconPropType,
  Xe as toIconClass,
  qe as toIconName,
  e as treeIdUtils,
  Po as updateItem,
  Ee as useAsyncFocusBlur,
  Le as useCollection,
  ve as useCustomComponent,
  Ie as useDir,
  Be as useDocument,
  mo as useDraggable,
  xo as useDroppable,
  ke as useId,
  We as useIsomorphicLayoutEffect,
  be as useMouse,
  Fe as usePropsContext,
  ge as useRtl,
  Pe as useWindow,
  p as useZIndexContext,
  oe as validatePackage,
  de as withIdHOC,
  ce as withPropsContext
};
